<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Hello World</title>
    <url>/2021/03/20/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>
]]></content>
  </entry>
  <entry>
    <title>C语言入门</title>
    <url>/2021/03/20/C%E8%AF%AD%E8%A8%80%E5%85%A5%E9%97%A8/</url>
    <content><![CDATA[<h4 id="第一个C语言程序"><a href="#第一个C语言程序" class="headerlink" title="第一个C语言程序"></a>第一个C语言程序</h4><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Hello,world!&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<hr>
<h4 id="使用C语言解决-a-b-c"><a href="#使用C语言解决-a-b-c" class="headerlink" title="使用C语言解决 a+b=c"></a>使用C语言解决 a+b=c</h4><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> a,b,c;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>,&amp;a,&amp;b);</span><br><span class="line">    c=a+b;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>,c);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>计算机编程语言</category>
        <category>C语言</category>
      </categories>
      <tags>
        <tag>C语言</tag>
      </tags>
  </entry>
  <entry>
    <title>迷宫寻宝</title>
    <url>/2021/03/21/%E8%BF%B7%E5%AE%AB%E5%AF%BB%E5%AE%9D/</url>
    <content><![CDATA[<h3 id="题目描述："><a href="#题目描述：" class="headerlink" title="题目描述："></a>题目描述：</h3><p>　　洪尼玛今天准备去寻宝，在一个n*n （n行, n列）的迷宫中，存在着一个入口、一些墙壁以及一个宝藏。由于迷宫是四连通的，即在迷宫中的一个位置，只能走到与它直接相邻的其他四个位置（上、下、左、右）。现洪尼玛在迷宫的入口处，问他最少需要走几步才能拿到宝藏？若永远无法拿到宝藏，则输出-1。</p>
<span id="more"></span>

<hr>
<h3 id="输入："><a href="#输入：" class="headerlink" title="输入："></a>输入：</h3><p>　　多组测试数据。</p>
<p>　　每组数据输入第一行为正整数n，表示迷宫大小。</p>
<p>　　接下来n行，每行包括n个字符，其中字符’.’表示该位置为空地，字符’#’表示该位置为墙壁，字符’S’表示该位置为入口，字符’E’表示该位置为宝藏，输入数据中只有这四种字符，并且’S’和’E’仅出现一次。</p>
<p>　　n≤1000</p>
<hr>
<h3 id="输出："><a href="#输出：" class="headerlink" title="输出："></a>输出：</h3><p>　　输出拿到宝藏最少需要走的步数，若永远无法拿到宝藏，则输出-1。</p>
<hr>
<h3 id="Sample-Input："><a href="#Sample-Input：" class="headerlink" title="Sample Input："></a>Sample Input：</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">5</span><br><span class="line">S.#..</span><br><span class="line">#.#.#</span><br><span class="line">#.#.#</span><br><span class="line">#...E</span><br><span class="line">#....</span><br></pre></td></tr></table></figure>

<h3 id="Sample-Output"><a href="#Sample-Output" class="headerlink" title="Sample Output"></a>Sample Output</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">7</span><br></pre></td></tr></table></figure>

<hr>
<h3 id="Code-1-0"><a href="#Code-1-0" class="headerlink" title="Code 1.0"></a>Code 1.0</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="keyword">int</span> n,m,sx,sy,ex,ey,step=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> visited[<span class="number">1001</span>][<span class="number">1001</span>],min=<span class="number">10000</span>,flag=<span class="number">0</span>; <span class="comment">//存放已走过的路径</span></span><br><span class="line"><span class="keyword">char</span> <span class="built_in">map</span>[<span class="number">1001</span>][<span class="number">1001</span>]; <span class="comment">//存迷宫</span></span><br><span class="line"><span class="keyword">int</span> fx_x[<span class="number">4</span>]=&#123;<span class="number">-1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>&#125;; <span class="comment">//(fx_x,fx_y)确定搜索方向</span></span><br><span class="line"><span class="keyword">int</span> fx_y[<span class="number">4</span>]=&#123;<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">-1</span>&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y,<span class="keyword">int</span> step)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i;</span><br><span class="line">    <span class="keyword">if</span> (x==ex &amp;&amp; y==ey)&#123;</span><br><span class="line">        flag=<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span>(step&lt;min)</span><br><span class="line">            min=step;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">4</span>; i++) &#123;</span><br><span class="line">        <span class="keyword">int</span> tx,ty;</span><br><span class="line">        tx=x+fx_x[i];</span><br><span class="line">        ty=y+fx_y[i];</span><br><span class="line">        <span class="keyword">if</span> ((<span class="built_in">map</span>[tx][ty]==<span class="string">&#x27;.&#x27;</span> || <span class="built_in">map</span>[tx][ty]==<span class="string">&#x27;E&#x27;</span>) &amp;&amp; !visited[tx][ty]) &#123;</span><br><span class="line">            visited[tx][ty]=<span class="number">1</span>;</span><br><span class="line">            dfs(tx,ty,step+<span class="number">1</span>);</span><br><span class="line">            visited[tx][ty]=<span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i,j;</span><br><span class="line">    <span class="comment">//获取行列的值，n为行，m为列</span></span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line">    m=n;</span><br><span class="line">    <span class="comment">//存放迷宫地图</span></span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>,<span class="built_in">map</span>[i]);</span><br><span class="line">    <span class="comment">//遍历map，获取起点S和终点E的位置</span></span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">        <span class="keyword">for</span> (j = <span class="number">0</span>; j &lt; m; j++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="built_in">map</span>[i][j]==<span class="string">&#x27;S&#x27;</span>) &#123;</span><br><span class="line">                sx=i;</span><br><span class="line">                sy=j;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (<span class="built_in">map</span>[i][j]==<span class="string">&#x27;E&#x27;</span>) &#123;</span><br><span class="line">                ex=i;</span><br><span class="line">                ey=j;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    visited[sx][sy]=<span class="number">1</span>;</span><br><span class="line">    dfs(sx,sy,step);</span><br><span class="line">    <span class="keyword">if</span>(flag==<span class="number">1</span>)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>,min);</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;-1&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>　　code 1.0 使用了深度优先搜索实现，纯递归回溯，运行效率低，一旦数据量过大，则需要大量的时间进行运算。</p>
]]></content>
      <categories>
        <category>算法与数据结构</category>
        <category>DFS</category>
      </categories>
      <tags>
        <tag>C语言</tag>
        <tag>搜索专题</tag>
        <tag>DFS</tag>
      </tags>
  </entry>
  <entry>
    <title>hexo_teatch</title>
    <url>/2021/03/20/hexo-teatch/</url>
    <content><![CDATA[<p>Markdown 语言测试</p>
<h1 id="一级标题"><a href="#一级标题" class="headerlink" title="一级标题"></a>一级标题</h1><h2 id="二级标题"><a href="#二级标题" class="headerlink" title="二级标题"></a>二级标题</h2><h3 id="三级标题"><a href="#三级标题" class="headerlink" title="三级标题"></a>三级标题</h3><h4 id="四级标题"><a href="#四级标题" class="headerlink" title="四级标题"></a>四级标题</h4><p><em>不知道这个是什么东西</em></p>
<span id="more"></span>
<blockquote>
<p>这个是引用</p>
</blockquote>
<p><img src="/images/mr_jiluo.jpg" alt="这个鼠标放上面显示的文章内容"></p>
<p><a href="http://www.baidu.com/">百度</a></p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">  <span class="keyword">int</span> a;</span><br><span class="line">  <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;a);</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>,a);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ol>
<li>季丶落</li>
<li>楠丶杺</li>
</ol>
<ul>
<li>text</li>
<li>test</li>
</ul>
<table>
<thead>
<tr>
<th align="center">学号</th>
<th align="center">姓名</th>
<th align="center">班级</th>
</tr>
</thead>
<tbody><tr>
<td align="center">20</td>
<td align="center">季殷昊</td>
<td align="center">计算机20</td>
</tr>
</tbody></table>
<hr>
]]></content>
      <tags>
        <tag>test</tag>
      </tags>
  </entry>
</search>
