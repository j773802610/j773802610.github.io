<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>C语言入门</title>
    <url>/2021/03/20/C%E8%AF%AD%E8%A8%80%E5%85%A5%E9%97%A8/</url>
    <content><![CDATA[<h4 id="第一个C语言程序"><a href="#第一个C语言程序" class="headerlink" title="第一个C语言程序"></a>第一个C语言程序</h4><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Hello,world!&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<hr>
<h4 id="使用C语言解决-a-b-c"><a href="#使用C语言解决-a-b-c" class="headerlink" title="使用C语言解决 a+b=c"></a>使用C语言解决 a+b=c</h4><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> a,b,c;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>,&amp;a,&amp;b);</span><br><span class="line">    c=a+b;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>,c);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>C语言</category>
      </categories>
      <tags>
        <tag>C语言</tag>
      </tags>
  </entry>
  <entry>
    <title>蓝桥杯_第十一届C/C++ B组</title>
    <url>/2021/04/13/LQB_%E7%AC%AC%E5%8D%81%E4%B8%80%E5%B1%8ACB/</url>
    <content><![CDATA[<h4 id="第一题（跑步训练）"><a href="#第一题（跑步训练）" class="headerlink" title="第一题（跑步训练）"></a>第一题（跑步训练）</h4><h5 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h5><p>　　小明要做一个跑步训练。</p>
<p>　　初始时，小明充满体力，体力值计为 10000 。如果小明跑步，每分钟损耗 600 的体力。如果小明休息，每分钟增加 300 的体力。体力的损耗和增加都是均匀变化的。</p>
<p>　　小明打算跑一分钟、休息一分钟、再跑一分钟、再休息一分钟……如此循环。如果某个时刻小明的体力到达 0 ，他就停止锻炼。<br>请问小明在多久后停止锻炼。为了使答案为整数，请以秒为单位输出答案。答案中只填写数，不填写单位。</p>
<span id="more"></span>

<h5 id="题目分析"><a href="#题目分析" class="headerlink" title="题目分析"></a>题目分析</h5><p>　　</p>
<h5 id="Code"><a href="#Code" class="headerlink" title="Code"></a>Code</h5><hr>
<h4 id="第二题（纪念日）"><a href="#第二题（纪念日）" class="headerlink" title="第二题（纪念日）"></a>第二题（纪念日）</h4><h5 id="题目描述-1"><a href="#题目描述-1" class="headerlink" title="题目描述"></a>题目描述</h5><p>　　2020 年 7 月 1 日是中国 共 产 党 成立 99 周年纪念日。</p>
<p>　　中国 共 产 党 成立于 1921 年 7 月 23 日。</p>
<p>　　请问从 1921 年 7 月 23 日中午 12 时到 2020 年 7 月 1 日中午 12 时一共包含多少分钟？</p>
<h5 id="题目分析-1"><a href="#题目分析-1" class="headerlink" title="题目分析"></a>题目分析</h5><p>　　先计算1922年到2020 年一共多少天，然后减去多余的天数</p>
<h5 id="Code-1"><a href="#Code-1" class="headerlink" title="Code"></a>Code</h5><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure>

<hr>
<h4 id="第四题（REPEAT-程序）"><a href="#第四题（REPEAT-程序）" class="headerlink" title="第四题（REPEAT 程序）"></a>第四题（REPEAT 程序）</h4><h5 id="题目描述-2"><a href="#题目描述-2" class="headerlink" title="题目描述"></a>题目描述</h5><p>　　附件 prog.txt 中是一个用某种语言写的程序。<br>　　其中 REPEAT k 表示一个次数为 k 的循环。循环控制的范围由缩进表达，从次行开始连续的缩进比该行多的（前面的空白更长的）为循环包含的内容。<br>　　例如如下片段：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">REPEAT 2:</span><br><span class="line">	A &#x3D; A + 4</span><br><span class="line">	REPEAT 5:</span><br><span class="line">		REPEAT 6:</span><br><span class="line">			A &#x3D; A + 5</span><br><span class="line">		A &#x3D; A + 7</span><br><span class="line">	A &#x3D; A + 8</span><br><span class="line">A &#x3D; A + 9</span><br></pre></td></tr></table></figure>

<p>　　该片段中从 A = A + 4 所在的行到 A = A + 8 所在的行都在第一行的循环两次中。<br>　　REPEAT 6: 所在的行到 A = A + 7 所在的行都在 REPEAT 5: 循环中。<br>　　A = A + 5 实际总共的循环次数是 2 × 5 × 6 = 60 次。<br>　　请问该程序执行完毕之后，A 的值是多少？</p>
<h5 id="Code-2"><a href="#Code-2" class="headerlink" title="Code"></a>Code</h5><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> a=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>; <span class="number">1</span>&lt;=<span class="number">2</span>; i++) &#123;</span><br><span class="line">        a=a+<span class="number">4</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j=<span class="number">1</span>; j&lt;=<span class="number">5</span>; j++)&#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> k=<span class="number">1</span>; k&lt;=<span class="number">6</span>; k++)</span><br><span class="line">                    a=a+<span class="number">5</span>;</span><br><span class="line">        a=a+<span class="number">7</span>;</span><br><span class="line">        a=a+<span class="number">8</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    a=a+<span class="number">9</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>,a);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<hr>
<h4 id="第五题（矩阵）"><a href="#第五题（矩阵）" class="headerlink" title="第五题（矩阵）"></a>第五题（矩阵）</h4><h5 id="题目描述-3"><a href="#题目描述-3" class="headerlink" title="题目描述"></a>题目描述</h5><p>　　把 1∼2020 放在 2×1010 的矩阵里。要求同一行中右边的比左边大，同一列中下边的比上边的大。一共有多少种方案？</p>
<p>　　答案很大，你只需要给出方案数除以 2020 的余数即可。</p>
<hr>
<h4 id="第六题（整除序列）"><a href="#第六题（整除序列）" class="headerlink" title="第六题（整除序列）"></a>第六题（整除序列）</h4><h5 id="题目描述-4"><a href="#题目描述-4" class="headerlink" title="题目描述"></a>题目描述</h5>]]></content>
      <categories>
        <category>C语言</category>
      </categories>
      <tags>
        <tag>蓝桥杯</tag>
      </tags>
  </entry>
  <entry>
    <title>蓝桥杯_第七届C/C++ B组</title>
    <url>/2021/04/13/LQB_%E7%AC%AC%E4%B8%83%E7%95%8CCB/</url>
    <content><![CDATA[<h4 id="第一题（煤球数目）"><a href="#第一题（煤球数目）" class="headerlink" title="第一题（煤球数目）"></a>第一题（煤球数目）</h4><h5 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h5><p>　　有一堆煤球，堆成三角棱锥形。具体：</p>
<p>　　第一层放1个，</p>
<p>　　第二层3个（排列成三角形），</p>
<p>　　第三层6个（排列成三角形），</p>
<p>　　第四层10个（排列成三角形），…</p>
<p>　　如果一共有100层，共有多少个煤球？</p>
<p>　　请填表示煤球总数目的数字。</p>
<p>　　注意：你提交的应该是一个整数，不要填写任何多余的内容或说明性文字。</p>
<span id="more"></span>

<h5 id="题目分析"><a href="#题目分析" class="headerlink" title="题目分析"></a>题目分析</h5><p>　　该题目是一个模拟题，首先找出他的规律</p>
<p>　　第一层 1</p>
<p>　　第二层 1+2</p>
<p>　　第三层 1+2+3</p>
<p>　　第四层 1+2+3+4</p>
<p>　　可以看出他的规律了，就是依次加</p>
<p>　　最后的要求是求全部的煤球数</p>
<h5 id="Code"><a href="#Code" class="headerlink" title="Code"></a>Code</h5><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">n_count</span><span class="params">(<span class="keyword">int</span> n)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> sum=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++) &#123;</span><br><span class="line">        sum+=i;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> sum;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> sum=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=<span class="number">100</span>; i++) &#123;</span><br><span class="line">        sum+=n_count(i);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>,sum);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<hr>
<h4 id="第二题（生日蜡烛）"><a href="#第二题（生日蜡烛）" class="headerlink" title="第二题（生日蜡烛）"></a>第二题（生日蜡烛）</h4><h5 id="题目描述-1"><a href="#题目描述-1" class="headerlink" title="题目描述"></a>题目描述</h5><p>　　某君从某年开始每年都举办一次生日party，并且每次都要吹熄与年龄相同根数的蜡烛。</p>
<p>　　现在算起来，他一共吹熄了236根蜡烛。</p>
<p>　　请问，他从多少岁开始过生日party的？</p>
<p>　　请填写他开始过生日party的年龄数。</p>
<p>　　注意：你提交的应该是一个整数，不要填写任何多余的内容或说明性文字。</p>
<h5 id="题目分析-1"><a href="#题目分析-1" class="headerlink" title="题目分析"></a>题目分析</h5><p>　　该题目暴力求出，两层循环，第一层表示从多少岁过生日，第二层表示当前多少岁了。满足条件就跳出循环。</p>
<h5 id="Code-1"><a href="#Code-1" class="headerlink" title="Code"></a>Code</h5><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;<span class="number">100</span>; i++) &#123;</span><br><span class="line">        <span class="keyword">int</span> sum=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j=i; j&lt;<span class="number">100</span>; j++) &#123;</span><br><span class="line">            sum+=j;</span><br><span class="line">            <span class="keyword">if</span> (sum==<span class="number">236</span>)&#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>,i);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>C语言</category>
      </categories>
      <tags>
        <tag>蓝桥杯</tag>
      </tags>
  </entry>
  <entry>
    <title>蓝桥杯_第十一届C/C++ B组第二场</title>
    <url>/2021/04/05/LQB_%E7%AC%AC%E5%8D%81%E4%B8%80%E5%B1%8ACB_2/</url>
    <content><![CDATA[<h4 id="第一题（门牌制作）"><a href="#第一题（门牌制作）" class="headerlink" title="第一题（门牌制作）"></a>第一题（门牌制作）</h4><h5 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h5><p>　　小蓝要为一条街的住户制作门牌号。这条街一共有2020位住户，门牌号从1到2020编号。小蓝制作门牌的方法是先制作0到9这几个数字字符，最后根据需要将字符粘贴到门牌上，例如门牌1017需要依次粘贴字符1、0、1、7，即需要1个字符0，2个字符1，1个字符7。请问要制作所有的1到2020号门牌，总共需要多少个字符2？</p>
<span id="more"></span>

<h5 id="题目分析"><a href="#题目分析" class="headerlink" title="题目分析"></a>题目分析</h5><p>　　暴力搜索，判断每个位置的字符是否满足条件</p>
<h5 id="Code"><a href="#Code" class="headerlink" title="Code"></a>Code</h5><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> sum=<span class="number">0</span>,a;  <span class="comment">//sum存储2的个数，a存储每次遍历的数字</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=<span class="number">2020</span>; i++) &#123;</span><br><span class="line">        a=i;</span><br><span class="line">        <span class="keyword">while</span> (a) &#123;</span><br><span class="line">            <span class="keyword">if</span> (a%<span class="number">10</span>==<span class="number">2</span>)</span><br><span class="line">                sum++;</span><br><span class="line">            a/=<span class="number">10</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>,sum);</span><br><span class="line">  	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h5 id="Key"><a href="#Key" class="headerlink" title="Key"></a>Key</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">642</span><br></pre></td></tr></table></figure>

<hr>
<h4 id="第二题（既约分数）"><a href="#第二题（既约分数）" class="headerlink" title="第二题（既约分数）"></a>第二题（既约分数）</h4><h5 id="题目描述-1"><a href="#题目描述-1" class="headerlink" title="题目描述"></a>题目描述</h5><p>　　如果一个分数的分子和分母的最大公约数是1，这个分数称为既约分数。例如，3/4,5/2,1/8,7/1都是既约分数。请问，有多少个既约分数，分子和分母都是1到2020之间的整数（包括1和2020）</p>
<h5 id="题目分析-1"><a href="#题目分析-1" class="headerlink" title="题目分析"></a>题目分析</h5><p>　　暴力搜索，通过最大公约数判断</p>
<h5 id="Code-1"><a href="#Code-1" class="headerlink" title="Code"></a>Code</h5><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">is_right</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> ys,i;</span><br><span class="line">    <span class="keyword">for</span> (i=<span class="number">2</span>; i&lt;=a; i++) &#123;</span><br><span class="line">        ys=<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span> (a%i==<span class="number">0</span> &amp;&amp; b%i==<span class="number">0</span>) &#123;</span><br><span class="line">            ys=i;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (ys!=<span class="number">1</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i,j,count=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (i=<span class="number">1</span>; i&lt;=<span class="number">2020</span>; i++)</span><br><span class="line">        <span class="keyword">for</span> (j=<span class="number">1</span>; j&lt;=<span class="number">2020</span>; j++)</span><br><span class="line">            <span class="keyword">if</span>(is_right(i, j))count++;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>,count);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h5 id="Key-1"><a href="#Key-1" class="headerlink" title="Key"></a>Key</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">2481215</span><br></pre></td></tr></table></figure>

<hr>
<h4 id="第三题（蛇形数组）"><a href="#第三题（蛇形数组）" class="headerlink" title="第三题（蛇形数组）"></a>第三题（蛇形数组）</h4><h5 id="题目描述-2"><a href="#题目描述-2" class="headerlink" title="题目描述"></a>题目描述</h5><p>　　如下图所示，小明用从1开始的正整数“蛇形”填充无限大的矩阵。容易看出矩阵第二行第二列中的数是5。请你计算矩阵中第20行第20列的数是多少？</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1 2 6 7 15 …</span><br><span class="line">3 5 8 14 …</span><br><span class="line">4 9 13 …</span><br><span class="line">10 12 …</span><br><span class="line">11 …</span><br></pre></td></tr></table></figure>

<h5 id="题目分析-2"><a href="#题目分析-2" class="headerlink" title="题目分析"></a>题目分析</h5><p>　　可以将图形顺时针旋转45度，我们可以发现20行20列应该位于第49层的中间一个，然后模拟就可以算出来了</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1行1列	       1</span><br><span class="line">	  	       3 2</span><br><span class="line">2行2列	     4 5 6</span><br><span class="line">	        10 9 8 7</span><br><span class="line">3行3列	 11 12 13 14 15</span><br><span class="line">.................</span><br></pre></td></tr></table></figure>

<h5 id="Code-2"><a href="#Code-2" class="headerlink" title="Code"></a>Code</h5><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> num=<span class="number">1</span>; <span class="comment">//定义初始值为1</span></span><br><span class="line">    <span class="keyword">int</span> a[<span class="number">50</span>][<span class="number">50</span>]; <span class="comment">//定义一个数组a，存蛇形数组</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> k=<span class="number">0</span>; k&lt;<span class="number">40</span>; k++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (k%<span class="number">2</span>==<span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;k; i++) &#123;</span><br><span class="line">                <span class="keyword">int</span> j=k-i<span class="number">-1</span>;</span><br><span class="line">                a[i][j]=num;</span><br><span class="line">                num++;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i=k<span class="number">-1</span>; i&gt;=<span class="number">0</span>; i--) &#123;</span><br><span class="line">                <span class="keyword">int</span> j=k-i<span class="number">-1</span>;</span><br><span class="line">                a[i][j]=num;</span><br><span class="line">                num++;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="comment">//    for (int i=0; i&lt;=3; i++) &#123;</span></span><br><span class="line"><span class="comment">//        for (int j=0; j&lt;=3; j++) &#123;</span></span><br><span class="line"><span class="comment">//            printf(&quot;%3d &quot;,a[i][j]);</span></span><br><span class="line"><span class="comment">//        &#125;</span></span><br><span class="line"><span class="comment">//        printf(&quot;\n&quot;);</span></span><br><span class="line"><span class="comment">//    &#125;</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>,a[<span class="number">19</span>][<span class="number">19</span>]);</span><br><span class="line">  	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h5 id="Key-2"><a href="#Key-2" class="headerlink" title="Key"></a>Key</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">761</span><br></pre></td></tr></table></figure>

<hr>
<h4 id="第四题（跑步锻炼）"><a href="#第四题（跑步锻炼）" class="headerlink" title="第四题（跑步锻炼）"></a>第四题（跑步锻炼）</h4><h5 id="题目描述-3"><a href="#题目描述-3" class="headerlink" title="题目描述"></a>题目描述</h5><p>　　小蓝每天都锻炼身体。正常情况下，小蓝每天跑1千米。如果某天是周一或者月初（1日），为了激励自己，小蓝要跑2千米。如果同时是周一或月初，小蓝也是跑2千米。小蓝跑步已经坚持了很长时间，从2000年1月1日周六（含）到2020年10月1日周四（含）。请问这段时间小蓝总共跑步多少千米？</p>
<h5 id="题目分析-3"><a href="#题目分析-3" class="headerlink" title="题目分析"></a>题目分析</h5><p>　　首先算出总的天数，和月份数，然后求出一共有多少个周一，和周一中为月份的天数<br>　　最后总天数+周一天数+月初天数 - 周一和月初重合天数</p>
<h5 id="Code-3"><a href="#Code-3" class="headerlink" title="Code"></a>Code</h5><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">is_run</span><span class="params">(<span class="keyword">int</span> n)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (n%<span class="number">400</span>==<span class="number">0</span> || (n%<span class="number">100</span>!=<span class="number">0</span> &amp;&amp; n%<span class="number">4</span>==<span class="number">0</span>))</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> year,month,end_month=<span class="number">12</span>,day,week=<span class="number">6</span>,run_length=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (year=<span class="number">2000</span>; year&lt;=<span class="number">2020</span>; year++) &#123;</span><br><span class="line">        <span class="keyword">if</span>(year==<span class="number">2020</span>)end_month=<span class="number">10</span>;</span><br><span class="line">        <span class="keyword">for</span> (month=<span class="number">1</span>; month&lt;=end_month; month++) &#123;</span><br><span class="line">            <span class="keyword">switch</span> (month) &#123;</span><br><span class="line">                <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">                <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">                <span class="keyword">case</span> <span class="number">5</span>:</span><br><span class="line">                <span class="keyword">case</span> <span class="number">7</span>:</span><br><span class="line">                <span class="keyword">case</span> <span class="number">8</span>:</span><br><span class="line">                <span class="keyword">case</span> <span class="number">10</span>:</span><br><span class="line">                <span class="keyword">case</span> <span class="number">12</span>:</span><br><span class="line">                    day=<span class="number">31</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line">                <span class="keyword">case</span> <span class="number">6</span>:</span><br><span class="line">                <span class="keyword">case</span> <span class="number">9</span>:</span><br><span class="line">                <span class="keyword">case</span> <span class="number">11</span>:</span><br><span class="line">                    day=<span class="number">30</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">                    day=<span class="number">28</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">default</span>:</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (month==<span class="number">2</span> &amp;&amp; is_run(year))</span><br><span class="line">                day++;</span><br><span class="line">            <span class="keyword">if</span>(year==<span class="number">2020</span> &amp;&amp; month==<span class="number">10</span>)day=<span class="number">1</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> k=<span class="number">1</span>; k&lt;=day; k++) &#123;</span><br><span class="line">                <span class="keyword">if</span> (k==<span class="number">1</span>)</span><br><span class="line">                    run_length+=<span class="number">2</span>;</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span>(week%<span class="number">7</span>==<span class="number">1</span>)</span><br><span class="line">                    run_length+=<span class="number">2</span>;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                    run_length++;</span><br><span class="line">                week++;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>,run_length);</span><br><span class="line">  	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h5 id="Key-3"><a href="#Key-3" class="headerlink" title="Key"></a>Key</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">8879</span><br></pre></td></tr></table></figure>

<hr>
<h4 id="第五题（七段码）"><a href="#第五题（七段码）" class="headerlink" title="第五题（七段码）"></a>第五题（七段码）</h4><h5 id="题目描述-4"><a href="#题目描述-4" class="headerlink" title="题目描述"></a>题目描述</h5><p>　　小蓝要用七段码数码管来表示一种特殊的文字。</p>
<p>　　七段码上图给出了七段码数码管的一个图示，数码管中一共有 7 段可以发光的二极管，分别标记为 a, b, c, d, e, f, g。小蓝要选择一部分二极管（至少要有一个）发光来表达字符。在设计字符的表达时，要求所有发光的二极管是连成一片的。</p>
<p>　　例如：b 发光，其他二极管不发光可以用来表达一种字符。</p>
<p>　　例如：c 发光，其他二极管不发光可以用来表达一种字符。这种方案与上一行的方案可以用来表示不同的字符，尽管看上去比较相似。</p>
<p>　　例如：a, b, c, d, e 发光，f, g 不发光可以用来表达一种字符。</p>
<p>　　例如：b, f 发光，其他二极管不发光则不能用来表达一种字符，因为发光的二极管没有连成一片。</p>
<p>　　请问，小蓝可以用七段码数码管表达多少种不同的字符？</p>
<h5 id="Code-未完成"><a href="#Code-未完成" class="headerlink" title="Code(未完成)"></a>Code(未完成)</h5><hr>
<h4 id="第六题（成绩统计）"><a href="#第六题（成绩统计）" class="headerlink" title="第六题（成绩统计）"></a>第六题（成绩统计）</h4><h5 id="题目描述-5"><a href="#题目描述-5" class="headerlink" title="题目描述"></a>题目描述</h5><p>　　小蓝给学生们组织了一场考试，卷面总分为100分，每个学生的得分都是一个0到100的整数。如果得分至少是60分，则称为及格。如果得分至少为85分，则称为优秀。请计算及格率和优秀率，用百分数表示，百分号前的部分四舍五入保留整数。</p>
<h5 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h5><p>　　输入的第一行包含一个整数n，表示考试人数。接下来n行，每行包含一个0至100的整数，表示一个学生的得分。</p>
<h5 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h5><p>　　 输出两行，每行一个百分数，分别表示及格率和优秀率。百分号前的部分四舍五入保留整数。</p>
<h5 id="Input"><a href="#Input" class="headerlink" title="Input"></a>Input</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">7</span><br><span class="line">80</span><br><span class="line">92</span><br><span class="line">56</span><br><span class="line">74</span><br><span class="line">88</span><br><span class="line">100</span><br><span class="line">0</span><br></pre></td></tr></table></figure>

<h5 id="Output"><a href="#Output" class="headerlink" title="Output"></a>Output</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">71%</span><br><span class="line">43%</span><br></pre></td></tr></table></figure>

<h5 id="Code-4"><a href="#Code-4" class="headerlink" title="Code"></a>Code</h5><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> score,n;</span><br><span class="line">    <span class="keyword">int</span> jg=<span class="number">0</span>,yx=<span class="number">0</span>,i;</span><br><span class="line">    <span class="keyword">int</span> jgl,yxl;</span><br><span class="line">    <span class="keyword">char</span> k=<span class="string">&#x27;%&#x27;</span>;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line">    <span class="keyword">for</span> (i=<span class="number">1</span>; i&lt;=n; i++)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;score);</span><br><span class="line">        <span class="keyword">if</span>(score&gt;=<span class="number">60</span>)</span><br><span class="line">            jg++;</span><br><span class="line">        <span class="keyword">if</span>(score&gt;=<span class="number">85</span>)</span><br><span class="line">            yx++;</span><br><span class="line">    &#125;</span><br><span class="line">    jgl=jg*<span class="number">1.0</span>/n*<span class="number">100</span>+<span class="number">0.5</span>;</span><br><span class="line">    yxl=yx*<span class="number">1.0</span>/n*<span class="number">100</span>+<span class="number">0.5</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d%c\n%d%c&quot;</span>,jgl,k,yxl,k);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<hr>
<h4 id="第七题（回文日期）"><a href="#第七题（回文日期）" class="headerlink" title="第七题（回文日期）"></a>第七题（回文日期）</h4><h5 id="题目描述-6"><a href="#题目描述-6" class="headerlink" title="题目描述"></a>题目描述</h5><p>　　2020年春节期间，有一个特殊的日期引起了大家的注意：2020年2月2日。因为如果将这个日期按“yyyymmdd”的格式写成一个8位数是20200202，恰好是一个回文数。我们称这样的日期是回文日期。有人表示20200202是“千年一遇”的特殊日子。对此小明很不认同，因为不到2年之后就是下一个回文日期：20211202即2021年12月2日。也有人表示20200202并不仅仅是一个回文日期，还是一个ABABBABA型的回文日期。对此小明也不认同，因为大约100年后就能遇到下一个ABABBABA型的回文日期：21211212即2121年12月12日。算不上“千年一遇”，顶多算“千年两遇”。给定一个8位数的日期，请你计算该日期之后下一个回文日期和下一个ABABBABA型的回文日期各是哪一天。</p>
<h5 id="输入格式-1"><a href="#输入格式-1" class="headerlink" title="输入格式"></a>输入格式</h5><p>　　输入包含一个八位整数N，表示日期。</p>
<h5 id="输出格式-1"><a href="#输出格式-1" class="headerlink" title="输出格式"></a>输出格式</h5><p>　　输出两行，每行1个八位数。第一行表示下一个回文日期，第二行表示下一个ABABBABA型的回文日期。</p>
<h5 id="评测用例规模与约定"><a href="#评测用例规模与约定" class="headerlink" title="评测用例规模与约定"></a>评测用例规模与约定</h5><p>　　对于所有评测用例，10000101 &lt;= N &lt;= 89991231，保证N是一个合法日期的8位数表示。</p>
<h5 id="题目分析-4"><a href="#题目分析-4" class="headerlink" title="题目分析"></a>题目分析</h5><h5 id="Input-1"><a href="#Input-1" class="headerlink" title="Input"></a>Input</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">20200202</span><br></pre></td></tr></table></figure>

<h5 id="Output-1"><a href="#Output-1" class="headerlink" title="Output"></a>Output</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">20211202</span><br><span class="line">21211212</span><br></pre></td></tr></table></figure>

<h5 id="Code-5"><a href="#Code-5" class="headerlink" title="Code"></a>Code</h5><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="keyword">int</span> s_date,s_year,s_month,s_day,flag[<span class="number">2</span>]=&#123;<span class="number">0</span>&#125;;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">is_run</span><span class="params">(<span class="keyword">int</span> year)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(year%<span class="number">400</span>==<span class="number">0</span> || (year%<span class="number">4</span>==<span class="number">0</span> &amp;&amp; year%<span class="number">100</span>!=<span class="number">0</span>)) <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">day_num</span><span class="params">(<span class="keyword">int</span> year, <span class="keyword">int</span> month)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> day_max;</span><br><span class="line">    <span class="keyword">switch</span> (month) &#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">            <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">            <span class="keyword">case</span> <span class="number">5</span>:</span><br><span class="line">            <span class="keyword">case</span> <span class="number">7</span>:</span><br><span class="line">            <span class="keyword">case</span> <span class="number">8</span>:</span><br><span class="line">            <span class="keyword">case</span> <span class="number">10</span>:</span><br><span class="line">            <span class="keyword">case</span> <span class="number">12</span>:</span><br><span class="line">                <span class="keyword">return</span> <span class="number">31</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line">            <span class="keyword">case</span> <span class="number">6</span>:</span><br><span class="line">            <span class="keyword">case</span> <span class="number">9</span>:</span><br><span class="line">            <span class="keyword">case</span> <span class="number">11</span>:</span><br><span class="line">            <span class="keyword">default</span>:</span><br><span class="line">                <span class="keyword">return</span> <span class="number">30</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">                day_max=<span class="number">28</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (is_run(year)) day_max++;</span><br><span class="line">    <span class="keyword">return</span> day_max;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">hw_date</span><span class="params">(<span class="keyword">int</span> first_date)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> t,second_date=<span class="number">0</span>,i;</span><br><span class="line">    t=first_date;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">8</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        second_date=second_date*<span class="number">10</span>+t%<span class="number">10</span>;</span><br><span class="line">        t/=<span class="number">10</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (second_date == first_date)</span><br><span class="line">    &#123;</span><br><span class="line">        flag[<span class="number">0</span>]=<span class="number">1</span>;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,first_date);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">AB</span><span class="params">(<span class="keyword">int</span> first_date)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> t,a[<span class="number">8</span>],i;</span><br><span class="line">    t=first_date;</span><br><span class="line">    <span class="keyword">for</span> (i=<span class="number">7</span>; i&gt;=<span class="number">0</span>; i--) &#123;</span><br><span class="line">        a[i]=t%<span class="number">10</span>;</span><br><span class="line">        t/=<span class="number">10</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//ABABBABA</span></span><br><span class="line">    <span class="comment">//01234567</span></span><br><span class="line">    <span class="comment">//0257</span></span><br><span class="line">    <span class="comment">//2346</span></span><br><span class="line">    <span class="keyword">if</span> (a[<span class="number">0</span>]==a[<span class="number">2</span>] &amp;&amp; a[<span class="number">2</span>]==a[<span class="number">5</span>] &amp;&amp; a[<span class="number">5</span>]==a[<span class="number">7</span>] &amp;&amp; a[<span class="number">1</span>]==a[<span class="number">3</span>] &amp;&amp; a[<span class="number">3</span>]==a[<span class="number">4</span>] &amp;&amp; a[<span class="number">4</span>]==a[<span class="number">6</span>])&#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,first_date);</span><br><span class="line">        flag[<span class="number">1</span>]=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> year,month,day,return_day;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;s_date);</span><br><span class="line">    s_year=s_date/<span class="number">10000</span>;</span><br><span class="line">    s_month=s_date/<span class="number">100</span>%<span class="number">100</span>;</span><br><span class="line">    s_day=s_date%<span class="number">100</span>+<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (year = s_year; year &lt;= <span class="number">9999</span>; year++) &#123;</span><br><span class="line">        <span class="keyword">if</span>(year!=s_year) s_month=<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span> (month = s_month; month &lt;= <span class="number">12</span>; month++) &#123;</span><br><span class="line">            <span class="keyword">if</span>(!(year==s_year &amp;&amp; month==s_month)) s_day=<span class="number">1</span>;</span><br><span class="line">            <span class="keyword">for</span> (day = s_day; day &lt;= day_num(year,month); day++) &#123;</span><br><span class="line">                return_day=year*<span class="number">10000</span>+month*<span class="number">100</span>+day;</span><br><span class="line">                <span class="keyword">if</span>(flag[<span class="number">0</span>]==<span class="number">0</span>)hw_date(return_day);</span><br><span class="line">                <span class="keyword">if</span>(flag[<span class="number">1</span>]==<span class="number">0</span>)AB(return_day);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(flag[<span class="number">0</span>]==<span class="number">1</span> &amp;&amp; flag[<span class="number">1</span>]==<span class="number">1</span>)<span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(flag[<span class="number">0</span>]==<span class="number">1</span> &amp;&amp; flag[<span class="number">1</span>]==<span class="number">1</span>)<span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<hr>
<h4 id="第八题（子串分值和）"><a href="#第八题（子串分值和）" class="headerlink" title="第八题（子串分值和）"></a>第八题（子串分值和）</h4><h5 id="题目描述-7"><a href="#题目描述-7" class="headerlink" title="题目描述"></a>题目描述</h5><p>　　对于一个字符串 S，我们定义 S 的分值 f (S ) 为 S 中出现的不同的字符个数。例如 f (”aba”) = 2， f (”abc”) = 3, f (”aaa”) = 1。<br>　　现在给定一个字符串 S [0..n − 1]（长度为 n），请你计算对于所有 S 的非空子串 S [i..j] (0&lt;=i&lt;=j&lt;n)， f (S [i.. j]) 的和是多少。</p>
<h5 id="输入格式-2"><a href="#输入格式-2" class="headerlink" title="输入格式"></a>输入格式</h5><p>　　输入一行包含一个由小写字母组成的字符串S。</p>
<h5 id="输出格式-2"><a href="#输出格式-2" class="headerlink" title="输出格式"></a>输出格式</h5><p>　　输出一个整数表示答案。</p>
<h5 id="Input-2"><a href="#Input-2" class="headerlink" title="Input"></a>Input</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ababc</span><br></pre></td></tr></table></figure>

<h5 id="Output-2"><a href="#Output-2" class="headerlink" title="Output"></a>Output</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">２８</span><br></pre></td></tr></table></figure>

<h5 id="样例说明"><a href="#样例说明" class="headerlink" title="样例说明"></a>样例说明</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">子串  f值</span><br><span class="line">a     1</span><br><span class="line">ab    2</span><br><span class="line">aba   2</span><br><span class="line">abab  2</span><br><span class="line">ababc 3</span><br><span class="line"> b    1</span><br><span class="line"> ba   2</span><br><span class="line"> bab  2</span><br><span class="line"> babc 3</span><br><span class="line">  a   1</span><br><span class="line">  ab  2</span><br><span class="line">  abc 3</span><br><span class="line">   b  1</span><br><span class="line">   bc 2</span><br><span class="line">    c 1</span><br></pre></td></tr></table></figure>

<h5 id="Code-1-0"><a href="#Code-1-0" class="headerlink" title="Code 1.0"></a>Code 1.0</h5><p>　　1.0版本得分50%</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> N 100010</span></span><br><span class="line"><span class="keyword">char</span> <span class="built_in">map</span>[N];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">words_num</span><span class="params">(<span class="keyword">char</span> *a,<span class="keyword">int</span> number)</span></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> *q=a;</span><br><span class="line">    <span class="keyword">int</span> num[<span class="number">26</span>]=&#123;<span class="number">0</span>&#125;,count=<span class="number">0</span>,i;</span><br><span class="line">    <span class="keyword">for</span> (; q&lt;a+number; q++)</span><br><span class="line">        num[*q-<span class="string">&#x27;a&#x27;</span>]=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (i=<span class="number">0</span>; i&lt;<span class="number">26</span>; i++)</span><br><span class="line">        <span class="keyword">if</span>(num[i]==<span class="number">1</span>)</span><br><span class="line">            count++;</span><br><span class="line">    <span class="keyword">return</span> count;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> count,sum=<span class="number">0</span>,i,j;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>,<span class="built_in">map</span>);</span><br><span class="line">    <span class="keyword">for</span> (count=<span class="number">0</span>; <span class="built_in">map</span>[count]!=<span class="string">&#x27;\0&#x27;</span>; count++);</span><br><span class="line">    <span class="keyword">for</span> (i=<span class="number">0</span>; i&lt;count; i++);</span><br><span class="line">    <span class="keyword">for</span> (i=<span class="number">0</span>; i&lt;count; i++) </span><br><span class="line">        <span class="keyword">for</span> (j=i; j&lt;=count; j++) </span><br><span class="line">            sum+=words_num(&amp;<span class="built_in">map</span>[i], j-i);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>,sum);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<hr>
<h4 id="第九题（平面切分）"><a href="#第九题（平面切分）" class="headerlink" title="第九题（平面切分）"></a>第九题（平面切分）</h4><h5 id="题目描述-8"><a href="#题目描述-8" class="headerlink" title="题目描述"></a>题目描述</h5><p>　　平面上有<em><strong>N</strong></em> 条直线，其中第i条直线是 <em><strong>y = Ai · x + Bi</strong></em>。<br>　　请计算这些直线将平面分成了几个部分。</p>
<h5 id="输入格式-3"><a href="#输入格式-3" class="headerlink" title="输入格式"></a>输入格式</h5><p>　　输入的第一行包含一个整数N。</p>
<p>　　以下N行，包含两个证书 Ai，Bi。</p>
<h5 id="输出格式-3"><a href="#输出格式-3" class="headerlink" title="输出格式"></a>输出格式</h5><p>　　一个整数代表答案</p>
<h5 id="Input-3"><a href="#Input-3" class="headerlink" title="Input"></a>Input</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">3</span><br><span class="line">1 1</span><br><span class="line">2 2</span><br><span class="line">3 3</span><br></pre></td></tr></table></figure>

<h5 id="Output-3"><a href="#Output-3" class="headerlink" title="Output"></a>Output</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">6</span><br></pre></td></tr></table></figure>

<h5 id="Code-未完成-1"><a href="#Code-未完成-1" class="headerlink" title="Code(未完成)"></a>Code(未完成)</h5><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<hr>
<h4 id="第十题（字串排序）"><a href="#第十题（字串排序）" class="headerlink" title="第十题（字串排序）"></a>第十题（字串排序）</h4><h5 id="题目描述-9"><a href="#题目描述-9" class="headerlink" title="题目描述"></a>题目描述</h5><p>　　小蓝最近学习了一些排序算法，其中冒泡排序让他印象深刻。<br>　　在冒泡排序中，每次只能交换相邻的两个元素。小蓝发现，如果对一个字符串中的字符排序，只允许交换相邻的两个字符，则在所有可能的排序方案中，冒泡排序的总交换次数是最少的。<br>　　例如，对于字符串 lan 排序，只需要 1 次交换。对于字符串 qiao 排序，总共需要 4 次交换。<br>　　小蓝找到了很多字符串试图排序，他恰巧碰到一个字符串，需要 V 次交换，可是他忘了把这个字符串记下来，现在找不到了。<br>　　请帮助小蓝找一个只包含小写英文字母且没有字母重复出现的字符串，对该串的字符排序，正好需要 V 次交换。如果可能找到多个，请告诉小蓝最短的那个。如果最短的仍然有多个，请告诉小蓝字典序最小的那个。请注意字符串中可以包含相同的字符。</p>
<h5 id="输入格式-4"><a href="#输入格式-4" class="headerlink" title="输入格式"></a>输入格式</h5><p>　　输入的第一行包含一个整数V，小蓝的幸运数字。</p>
<h5 id="输出格式-4"><a href="#输出格式-4" class="headerlink" title="输出格式"></a>输出格式</h5><p>　　题面要求的一行字符串。</p>
<h5 id="Input-4"><a href="#Input-4" class="headerlink" title="Input"></a>Input</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">4</span><br></pre></td></tr></table></figure>

<h5 id="Output-4"><a href="#Output-4" class="headerlink" title="Output"></a>Output</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">bbaa</span><br></pre></td></tr></table></figure>

<h5 id="Input-5"><a href="#Input-5" class="headerlink" title="Input"></a>Input</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">100</span><br></pre></td></tr></table></figure>

<h5 id="Output-5"><a href="#Output-5" class="headerlink" title="Output"></a>Output</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">jihgfeeddccbbaa</span><br></pre></td></tr></table></figure>

<h5 id="Code-未完成-2"><a href="#Code-未完成-2" class="headerlink" title="Code(未完成)"></a>Code(未完成)</h5><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>C语言</category>
      </categories>
      <tags>
        <tag>蓝桥杯</tag>
      </tags>
  </entry>
  <entry>
    <title>MyBatis</title>
    <url>/2023/03/14/Mybatis/</url>
    <content><![CDATA[<h3 id="导入依赖"><a href="#导入依赖" class="headerlink" title="导入依赖"></a>导入依赖</h3><p>pom.xml</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--导入依赖--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--MySQL--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.1.38<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--mybatis--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.5.6<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--junit--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.12<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure>

<span id="more"></span>

<p>mybatis-config.xml</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--核心配置文件--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--数据库连接代码--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">environments</span> <span class="attr">default</span>=<span class="string">&quot;development&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">environment</span> <span class="attr">id</span>=<span class="string">&quot;development&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">transactionManager</span> <span class="attr">type</span>=<span class="string">&quot;JDBC&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dataSource</span> <span class="attr">type</span>=<span class="string">&quot;POOLED&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;driver&quot;</span> <span class="attr">value</span>=<span class="string">&quot;com.mysql.jdbc.Driver&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;url&quot;</span> <span class="attr">value</span>=<span class="string">&quot;jdbc:mysql://localhost:3306/mybatis?useUnicode=true<span class="symbol">&amp;amp;</span>characterEncoding=utf8<span class="symbol">&amp;amp;</span>allowMultiQueries=true&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span> <span class="attr">value</span>=<span class="string">&quot;root&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span> <span class="attr">value</span>=<span class="string">&quot;&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dataSource</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">environment</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">environments</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--每一个Mapper.xml都需要在mybatis核心配置文件中注册！--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mappers</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">mapper</span> <span class="attr">resource</span>=<span class="string">&quot;com/jiluo/dao/UserMapper.xml&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">mappers</span>&gt;</span></span><br><span class="line">    </span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure>



<p>编写mybatis工具类</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> SqlSessionFactory sqlSessionFactory;</span><br><span class="line"></span><br><span class="line"><span class="keyword">static</span> &#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="comment">// 使用MyBatis第一步：获取SqlSessionFactory对象</span></span><br><span class="line">        String resource = <span class="string">&quot;mybatis-config.xml&quot;</span>;</span><br><span class="line">        InputStream inputStream = Resources.getResourceAsStream(resource);</span><br><span class="line">        sqlSessionFactory = <span class="keyword">new</span> SqlSessionFactoryBuilder().build(inputStream);</span><br><span class="line">    &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">        e.printStackTrace();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//获取SqlSession连接</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> SqlSession <span class="title">getSession</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> sqlSessionFactory.openSession();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h3 id="编写代码"><a href="#编写代码" class="headerlink" title="编写代码"></a>编写代码</h3><ul>
<li>实体类</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> id;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> String pwd;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">User</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">User</span><span class="params">(<span class="keyword">int</span> id, String name, String pwd)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.id = id;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">        <span class="keyword">this</span>.pwd = pwd;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getId</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setId</span><span class="params">(<span class="keyword">int</span> id)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.id = id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setName</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getPwd</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> pwd;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>



<ul>
<li>Dao接口</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">UserDao</span> </span>&#123;</span><br><span class="line">    <span class="function">List&lt;User&gt; <span class="title">getUserList</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<ul>
<li>实现类由原来的UserDaoImpl转变为一个Mapper配置文件</li>
</ul>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">mapper</span></span></span><br><span class="line"><span class="meta">        <span class="meta-keyword">PUBLIC</span> <span class="meta-string">&quot;-//mybatis.org//DTD Mapper 3.0//EN&quot;</span></span></span><br><span class="line"><span class="meta">        <span class="meta-string">&quot;https://mybatis.org/dtd/mybatis-3-mapper.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--namespace = 绑定一个对应的DAO/Mapper接口--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">&quot;com.jiluo.dao.UserDao&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;getUserList&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;com.jiluo.pojo.User&quot;</span>&gt;</span></span><br><span class="line">        select * from mybatis.user</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure>



<h3 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserDaoTest</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="comment">//第一步：获得SQLSession对象</span></span><br><span class="line">        SqlSession sqlSession = MybatisUtils.getSession();</span><br><span class="line">       </span><br><span class="line">        <span class="comment">// 方式一：getMapper（推荐）</span></span><br><span class="line">        UserDao userDao = sqlSession.getMapper(UserDao.class);</span><br><span class="line">        List&lt;User&gt; userList = userDao.getUserList();</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 方式二：</span></span><br><span class="line">        <span class="comment">// List&lt;User&gt; userList = sqlSession.selectList(&quot;com.jiluo.dao.UserDao.getUserList&quot;);</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (User user : userList)&#123;</span><br><span class="line">            System.out.println(user);</span><br><span class="line">        &#125;</span><br><span class="line">        sqlSession.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h4 id="遇到的问题"><a href="#遇到的问题" class="headerlink" title="遇到的问题"></a>遇到的问题</h4><ol>
<li>配置文件没有注册</li>
</ol>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--在build中配置resources，来防止我们资源导出失败的问题--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">resources</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">resource</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">directory</span>&gt;</span>src/main/java<span class="tag">&lt;/<span class="name">directory</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">includes</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">include</span>&gt;</span>**/*.xml<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">include</span>&gt;</span>**/*.properties<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">includes</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">resource</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">resource</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">directory</span>&gt;</span>src/main/resources<span class="tag">&lt;/<span class="name">directory</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">includes</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">include</span>&gt;</span>**/*.xml<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">include</span>&gt;</span>**/*.properties<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">includes</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">resource</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">resources</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br></pre></td></tr></table></figure>

<ol start="2">
<li>接口绑定错误</li>
<li>方法名不对</li>
<li>返回类型不对</li>
<li>Maven导出问题</li>
</ol>
<h2 id="CRUD"><a href="#CRUD" class="headerlink" title="CRUD"></a>CRUD</h2><ol>
<li>namespace</li>
</ol>
<p>namespace重的包名要和Dao/Mapper接口的包名一致！</p>
<ol start="2">
<li>SELECT</li>
</ol>
<p>选择，查询语句</p>
<ul>
<li>id：就是对应的namespace重的方法名；</li>
<li>resultType：Sql语句执行的返回值！</li>
<li>parameterType：参数类型</li>
</ul>
<p>编写接口</p>
<p>编写对应的Mapper中的Sql语句</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;getUserById&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;int&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;com.jiluo.pojo.User&quot;</span>&gt;</span></span><br><span class="line">    SELECT * FROM mybatis.user WHERE id = #&#123;id&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>测试</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">getUserById</span><span class="params">()</span></span>&#123;</span><br><span class="line">    SqlSession sqlSession = MybatisUtils.getSession();</span><br><span class="line">    UserMapper mapper = sqlSession.getMapper(UserMapper.class);</span><br><span class="line">    User user = mapper.getUserById(<span class="number">1</span>);</span><br><span class="line">    System.out.println(user);</span><br><span class="line">    sqlSession.close();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ol start="3">
<li>INSERT</li>
</ol>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">insert</span> <span class="attr">id</span>=<span class="string">&quot;addUser&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;com.jiluo.pojo.User&quot;</span>&gt;</span></span><br><span class="line">    INSERT INTO mybatis.user (id, name, pwd) VALUES (#&#123;id&#125;, #&#123;name&#125;, #&#123;pwd&#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">insert</span>&gt;</span></span><br></pre></td></tr></table></figure>

<ol start="4">
<li>UPDATE</li>
</ol>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">update</span> <span class="attr">id</span>=<span class="string">&quot;updateUser&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;com.jiluo.pojo.User&quot;</span>&gt;</span></span><br><span class="line">    UPDATE mybatis.user set name = #&#123;name&#125;, pwd = #&#123;pwd&#125; WHERE id = #&#123;id&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">update</span>&gt;</span></span><br></pre></td></tr></table></figure>

<ol start="5">
<li>DELETE</li>
</ol>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">delete</span> <span class="attr">id</span>=<span class="string">&quot;deleteUser&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;int&quot;</span>&gt;</span></span><br><span class="line">    DELETE FROM mybatis.user WHERE id = #&#123;id&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">delete</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h4 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h4><p>增删改需要提交事务</p>
<h3 id="分析错误"><a href="#分析错误" class="headerlink" title="分析错误"></a>分析错误</h3><ul>
<li>标签不要匹配错</li>
<li>resource绑定mapper，需要使用路径！</li>
</ul>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--每一个Mapper.xml都需要在mybatis核心配置文件中注册！--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mappers</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mapper</span> <span class="attr">resource</span>=<span class="string">&quot;com/jiluo/dao/UserMapper.xml&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mappers</span>&gt;</span></span><br></pre></td></tr></table></figure>

<ul>
<li>程序配置文件必须符合规范</li>
<li>NullPointerException，没有注册到资源</li>
<li>输出的xml文件中存在中文乱码！</li>
<li>maven资源没有导出</li>
</ul>
<h2 id="万能Map"><a href="#万能Map" class="headerlink" title="万能Map"></a>万能Map</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 万能的map</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">addUser2</span><span class="params">(Map&lt;String, Object&gt; map)</span></span>;</span><br></pre></td></tr></table></figure>



<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">对象中的属性，可以直接取出来</span></span><br><span class="line"><span class="comment">传递map的key</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">insert</span> <span class="attr">id</span>=<span class="string">&quot;addUser2&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;map&quot;</span>&gt;</span></span><br><span class="line">    INSERT INTO mybatis.user (id, name, pwd) VALUES (#&#123;userid&#125;, #&#123;name&#125;, #&#123;password&#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">insert</span>&gt;</span></span><br></pre></td></tr></table></figure>



<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">addUser2</span><span class="params">()</span></span>&#123;</span><br><span class="line">    SqlSession sqlSession = MybatisUtils.getSession();</span><br><span class="line"></span><br><span class="line">    UserMapper mapper = sqlSession.getMapper(UserMapper.class);</span><br><span class="line"></span><br><span class="line">    Map&lt;String, Object&gt; map = <span class="keyword">new</span> HashMap&lt;String, Object&gt;();</span><br><span class="line">    map.put(<span class="string">&quot;userid&quot;</span>, <span class="number">4</span>);</span><br><span class="line">    map.put(<span class="string">&quot;name&quot;</span>, <span class="string">&quot;hello&quot;</span>);</span><br><span class="line">    map.put(<span class="string">&quot;password&quot;</span>, <span class="string">&quot;222&quot;</span>);</span><br><span class="line">    mapper.addUser2(map);</span><br><span class="line"></span><br><span class="line">    sqlSession.commit();</span><br><span class="line">    sqlSession.close();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>





<p>Map传递参数，直接在Sql中取出key即可！【parameterType=”map”】</p>
<p>对象传递参数，直接在Sql中取对象即可！【parameterType=”Object”】</p>
<p>只有一个基本类型参数的情况下，可以直接在Sql中渠道！</p>
<p>多个参数用Map，<strong>或者注解</strong>！</p>
<p>模糊查询怎么写？</p>
<ol>
<li><p>Java代码执行的时候，传递通配符%%</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">List&lt;User&gt; userList = mapper.getUserLike(<span class="string">&quot;%李%&quot;</span>);</span><br></pre></td></tr></table></figure></li>
<li><p>在sql拼接中使用通配符！防止SQL注入</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;getUserLike&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;com.jiluo.pojo.User&quot;</span>&gt;</span></span><br><span class="line">    SELECT * FROM user WHERE name LIKE &quot;%&quot;#&#123;value&#125;&quot;%&quot;</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure></li>
</ol>
<h2 id="配置解析"><a href="#配置解析" class="headerlink" title="配置解析"></a>配置解析</h2><ol>
<li><p>核心配置文件</p>
<ul>
<li><p>mybatis-config.xml</p>
</li>
<li><p>MyBatis 的配置文件包含了会深深影响 MyBatis 行为的设置和属性信息</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">configuration（配置）</span><br><span class="line">properties（属性）</span><br><span class="line">settings（设置）</span><br><span class="line">typeAliases（类型别名）</span><br><span class="line">typeHandlers（类型处理器）</span><br><span class="line">objectFactory（对象工厂）</span><br><span class="line">plugins（插件）</span><br><span class="line">environments（环境配置）</span><br><span class="line">environment（环境变量）</span><br><span class="line">transactionManager（事务管理器）</span><br><span class="line">dataSource（数据源）</span><br><span class="line">databaseIdProvider（数据库厂商标识）</span><br><span class="line">mappers（映射器）</span><br></pre></td></tr></table></figure></li>
</ul>
</li>
<li><p>环境配置（environment）</p>
<p>MyBatis可以配置成适应多种环境</p>
</li>
<li><p>属性（properties）</p>
<p>db.properties</p>
<figure class="highlight properties"><table><tr><td class="code"><pre><span class="line"><span class="attr">driver</span> = <span class="string">com.mysql.jdbc.Driver</span></span><br><span class="line"><span class="attr">url</span> = <span class="string">jdbc:mysql://localhost:3306/mybatis?useUnicode=true&amp;characterEncoding=utf8&amp;allowMultiQueries=true</span></span><br><span class="line"><span class="attr">username</span> = <span class="string">root</span></span><br><span class="line"><span class="attr">password</span> = <span class="string"></span></span><br></pre></td></tr></table></figure>

<p>在核心配置文件中引入</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">!--引入外部配置文件--&gt;</span><br><span class="line"><span class="tag">&lt;<span class="name">properties</span> <span class="attr">resource</span>=<span class="string">&quot;db.properties&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span> <span class="attr">value</span>=<span class="string">&quot;root&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;pwd&quot;</span> <span class="attr">value</span>=<span class="string">&quot;&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br></pre></td></tr></table></figure>

<ul>
<li>可以直接引入外部文件</li>
<li>可以在其中增加一些属性配置</li>
<li>如果两个文件有同一个字段，优先使用外部配置文件的！</li>
</ul>
</li>
<li><p>别名</p>
<p>类型别名可为 Java 类型设置一个缩写名字。 它仅用于 XML 配置，意在降低冗余的全限定类名书写。</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--    可以给实体类取别名--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">typeAliases</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">typeAlias</span> <span class="attr">type</span>=<span class="string">&quot;com.jiluo.pojo.User&quot;</span> <span class="attr">alias</span>=<span class="string">&quot;User&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">typeAliases</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>也可以指定一个包名，MyBatis 会在包名下面搜索需要的Java Bean，比如：</p>
<p>扫描实体类的包，它的默认别名就是这个类的 类名， 首字母小写！</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--    可以给实体类取别名--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">typeAliases</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">package</span> <span class="attr">name</span>=<span class="string">&quot;com.jiluo.pojo&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">typeAliases</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>实体类比较少的时候，使用第一种方式（可以DIY别名）；</p>
<p>如果实体类十分多，建议使用第二种（不可以DIY别名，但可以使用注解@Alias() 取别名）。</p>
</li>
<li><p>设置</p>
</li>
<li><p>其他配置</p>
<ul>
<li>typeHandlers（类型处理器）</li>
<li>objectFactory（对象工厂）</li>
<li>plugins（插件）</li>
</ul>
</li>
<li><p>映射器（mapper）</p>
<p>MapperRegistry：注册绑定我们的Mapper文件；</p>
<p>方式一：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--每一个Mapper.xml都需要在mybatis核心配置文件中注册！--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mappers</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mapper</span> <span class="attr">resource</span>=<span class="string">&quot;com/jiluo/dao/UserMapper.xml&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mappers</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>方式二：使用class文件绑定</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--每一个Mapper.xml都需要在mybatis核心配置文件中注册！--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mappers</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mapper</span> <span class="attr">class</span>=<span class="string">&quot;com.jiluo.dao.UserMapper&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mappers</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>注意点：</p>
<ul>
<li>接口和他的Mapper配置文件必须同名</li>
<li>接口和他的Mapper配置文件必须在同一个包下</li>
</ul>
<p>方式三：使用扫描包进行注入</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--每一个Mapper.xml都需要在mybatis核心配置文件中注册！--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mappers</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">package</span> <span class="attr">name</span>=<span class="string">&quot;com.jiluo.dao&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mappers</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>注意点：</p>
<ul>
<li>接口和他的Mapper配置文件必须同名</li>
<li>接口和他的Mapper配置文件必须在同一个包下</li>
</ul>
</li>
</ol>
<h2 id="周期和作用域"><a href="#周期和作用域" class="headerlink" title="周期和作用域"></a>周期和作用域</h2><p>生命周期和作用域，是至关重要的，因为错误的使用会导致非常严重的并发问题</p>
<p>SqlSessionFactoryBuilder：</p>
<ul>
<li>一旦创建了SqlSessionFactory，就不在需要它了</li>
<li>局部变量</li>
</ul>
<p>SqlSessionFactory：</p>
<ul>
<li>说白了就是可以想象为：数据库连接池</li>
<li>SqlSessionFactory 一旦被创建就应该在应用的运行期间一直存在，没有任何理由丢弃它或重新创建另一个实例。</li>
<li>因此 SqlSessionFactory 的最佳作用域是应用作用域。</li>
<li>最简单的就是使用<strong>单例模式</strong>或者静态单例模式。</li>
</ul>
<p>SqlSession：</p>
<ul>
<li>连接到连接池的一个请求！</li>
<li>SqlSession 的实例不是线程安全的，因此是不能被共享的，所以它的最佳的作用域是请求或方法作用域。</li>
<li>用完后需要赶紧关闭，否则资源被占用</li>
</ul>
<h2 id="解决属性名和字段名不一致的问题"><a href="#解决属性名和字段名不一致的问题" class="headerlink" title="解决属性名和字段名不一致的问题"></a>解决属性名和字段名不一致的问题</h2><p>解决方法：</p>
<p>起别名：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;getUserById&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;int&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;com.jiluo.pojo.User&quot;</span>&gt;</span></span><br><span class="line">    SELECT id, name, pwd as password FROM mybatis.user WHERE id = #&#123;id&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure>



<h3 id="ResultMap"><a href="#ResultMap" class="headerlink" title="ResultMap"></a>ResultMap</h3><p>结果集映射</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">id	name	pwd</span><br><span class="line">id	name	password</span><br></pre></td></tr></table></figure>

<p>结果集映射</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">resultMap</span> <span class="attr">id</span>=<span class="string">&quot;UserMap&quot;</span> <span class="attr">type</span>=<span class="string">&quot;User&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--column数据库中的字段，property实体类中的属性--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">&quot;id&quot;</span> <span class="attr">property</span>=<span class="string">&quot;id&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">&quot;name&quot;</span> <span class="attr">property</span>=<span class="string">&quot;name&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">&quot;pwd&quot;</span> <span class="attr">property</span>=<span class="string">&quot;password&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">resultMap</span>&gt;</span></span><br></pre></td></tr></table></figure>



<ul>
<li>ResultMap 元素是 MyBatis 中最重要最强大的元素。</li>
<li>ResultMap 的设计思想是，对简单的语句做到零配置，对于复杂一点的语句，只需要描述语句之间的关系就行了。</li>
</ul>
]]></content>
      <categories>
        <category>Java</category>
        <category>MyBatis</category>
      </categories>
      <tags>
        <tag>MyBatis</tag>
      </tags>
  </entry>
  <entry>
    <title>迷宫寻宝</title>
    <url>/2021/03/21/%E8%BF%B7%E5%AE%AB%E5%AF%BB%E5%AE%9D/</url>
    <content><![CDATA[<h3 id="题目描述："><a href="#题目描述：" class="headerlink" title="题目描述："></a>题目描述：</h3><p>　　洪尼玛今天准备去寻宝，在一个n*n （n行, n列）的迷宫中，存在着一个入口、一些墙壁以及一个宝藏。由于迷宫是四连通的，即在迷宫中的一个位置，只能走到与它直接相邻的其他四个位置（上、下、左、右）。现洪尼玛在迷宫的入口处，问他最少需要走几步才能拿到宝藏？若永远无法拿到宝藏，则输出-1。</p>
<span id="more"></span>

<hr>
<h3 id="输入："><a href="#输入：" class="headerlink" title="输入："></a>输入：</h3><p>　　多组测试数据。</p>
<p>　　每组数据输入第一行为正整数n，表示迷宫大小。</p>
<p>　　接下来n行，每行包括n个字符，其中字符’.’表示该位置为空地，字符’#’表示该位置为墙壁，字符’S’表示该位置为入口，字符’E’表示该位置为宝藏，输入数据中只有这四种字符，并且’S’和’E’仅出现一次。</p>
<p>　　n≤1000</p>
<hr>
<h3 id="输出："><a href="#输出：" class="headerlink" title="输出："></a>输出：</h3><p>　　输出拿到宝藏最少需要走的步数，若永远无法拿到宝藏，则输出-1。</p>
<hr>
<h3 id="Sample-Input："><a href="#Sample-Input：" class="headerlink" title="Sample Input："></a>Sample Input：</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">5</span><br><span class="line">S.#..</span><br><span class="line">#.#.#</span><br><span class="line">#.#.#</span><br><span class="line">#...E</span><br><span class="line">#....</span><br></pre></td></tr></table></figure>

<h3 id="Sample-Output"><a href="#Sample-Output" class="headerlink" title="Sample Output"></a>Sample Output</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">7</span><br></pre></td></tr></table></figure>

<hr>
<h3 id="Code-1-0"><a href="#Code-1-0" class="headerlink" title="Code 1.0"></a>Code 1.0</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="keyword">int</span> n,m,sx,sy,ex,ey,step=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> visited[<span class="number">1001</span>][<span class="number">1001</span>],min=<span class="number">10000</span>,flag=<span class="number">0</span>; <span class="comment">//存放已走过的路径</span></span><br><span class="line"><span class="keyword">char</span> <span class="built_in">map</span>[<span class="number">1001</span>][<span class="number">1001</span>]; <span class="comment">//存迷宫</span></span><br><span class="line"><span class="keyword">int</span> fx_x[<span class="number">4</span>]=&#123;<span class="number">-1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>&#125;; <span class="comment">//(fx_x,fx_y)确定搜索方向</span></span><br><span class="line"><span class="keyword">int</span> fx_y[<span class="number">4</span>]=&#123;<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">-1</span>&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y,<span class="keyword">int</span> step)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i;</span><br><span class="line">    <span class="keyword">if</span> (x==ex &amp;&amp; y==ey)&#123;</span><br><span class="line">        flag=<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span>(step&lt;min)</span><br><span class="line">            min=step;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">4</span>; i++) &#123;</span><br><span class="line">        <span class="keyword">int</span> tx,ty;</span><br><span class="line">        tx=x+fx_x[i];</span><br><span class="line">        ty=y+fx_y[i];</span><br><span class="line">        <span class="keyword">if</span> ((<span class="built_in">map</span>[tx][ty]==<span class="string">&#x27;.&#x27;</span> || <span class="built_in">map</span>[tx][ty]==<span class="string">&#x27;E&#x27;</span>) &amp;&amp; !visited[tx][ty]) &#123;</span><br><span class="line">            visited[tx][ty]=<span class="number">1</span>;</span><br><span class="line">            dfs(tx,ty,step+<span class="number">1</span>);</span><br><span class="line">            visited[tx][ty]=<span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i,j;</span><br><span class="line">    <span class="comment">//获取行列的值，n为行，m为列</span></span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line">    m=n;</span><br><span class="line">    <span class="comment">//存放迷宫地图</span></span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>,<span class="built_in">map</span>[i]);</span><br><span class="line">    <span class="comment">//遍历map，获取起点S和终点E的位置</span></span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">        <span class="keyword">for</span> (j = <span class="number">0</span>; j &lt; m; j++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="built_in">map</span>[i][j]==<span class="string">&#x27;S&#x27;</span>) &#123;</span><br><span class="line">                sx=i;</span><br><span class="line">                sy=j;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (<span class="built_in">map</span>[i][j]==<span class="string">&#x27;E&#x27;</span>) &#123;</span><br><span class="line">                ex=i;</span><br><span class="line">                ey=j;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    visited[sx][sy]=<span class="number">1</span>;</span><br><span class="line">    dfs(sx,sy,step);</span><br><span class="line">    <span class="keyword">if</span>(flag==<span class="number">1</span>)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>,min);</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;-1&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>　　code 1.0 使用了深度优先搜索实现，纯递归回溯，运行效率低，一旦数据量过大，则需要大量的时间进行运算。</p>
<hr>
<h3 id="Code-2-0"><a href="#Code-2-0" class="headerlink" title="Code 2.0"></a>Code 2.0</h3><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> N 100</span></span><br><span class="line"><span class="keyword">int</span> n,m,s_x,s_y,e_x,e_y;</span><br><span class="line"><span class="keyword">char</span> <span class="built_in">map</span>[N][N];</span><br><span class="line"><span class="keyword">int</span> visited[N][N];</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> fx[<span class="number">4</span>]=&#123;<span class="number">-1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>&#125;;</span><br><span class="line"><span class="keyword">int</span> fy[<span class="number">4</span>]=&#123;<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">-1</span>&#125;;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Pointer</span>&#123;</span></span><br><span class="line">    <span class="keyword">int</span> x;</span><br><span class="line">    <span class="keyword">int</span> y;</span><br><span class="line">    <span class="keyword">int</span> step;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="built_in">queue</span>&lt;Pointer&gt; r;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> flag=<span class="number">0</span>;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>,&amp;n,&amp;m);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++)</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>,<span class="built_in">map</span>[i]);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; n; j++) &#123;</span><br><span class="line">            <span class="keyword">if</span>(<span class="built_in">map</span>[i][j]==<span class="string">&#x27;S&#x27;</span>)&#123;</span><br><span class="line">                s_x=i;</span><br><span class="line">                s_y=j;</span><br><span class="line">                Pointer start;</span><br><span class="line">                start.x=s_x;</span><br><span class="line">                start.y=s_y;</span><br><span class="line">                start.step=<span class="number">0</span>;</span><br><span class="line">                r.push(start);</span><br><span class="line">                visited[s_x][s_y]=<span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(<span class="built_in">map</span>[i][j]==<span class="string">&#x27;E&#x27;</span>)&#123;</span><br><span class="line">                e_x=i;</span><br><span class="line">                e_y=j;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">while</span> (!r.empty()) &#123;</span><br><span class="line">        <span class="keyword">int</span> tx,ty;</span><br><span class="line">        <span class="keyword">if</span> (r.front().x==e_x &amp;&amp; r.front().y==e_y) &#123;</span><br><span class="line">            flag=<span class="number">1</span>;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>,r.front().step);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;<span class="number">4</span>; i++) &#123;</span><br><span class="line">            tx=r.front().x+fx[i];</span><br><span class="line">            ty=r.front().y+fy[i];</span><br><span class="line">            <span class="keyword">if</span>(!visited[tx][ty] &amp;&amp; <span class="built_in">map</span>[tx][ty]!=<span class="string">&#x27;#&#x27;</span>)&#123;</span><br><span class="line">                visited[tx][ty]=<span class="number">1</span>;</span><br><span class="line">                Pointer test;</span><br><span class="line">                test.x=tx;</span><br><span class="line">                test.y=ty;</span><br><span class="line">                test.step=r.front().step+<span class="number">1</span>;</span><br><span class="line">                r.push(test);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        r.pop();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (flag==<span class="number">0</span>)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;-1&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>　　code 1.0 使用了广度优先搜索，效率较高。</p>
]]></content>
      <categories>
        <category>C语言</category>
        <category>算法与数据结构</category>
      </categories>
      <tags>
        <tag>搜索问题</tag>
      </tags>
  </entry>
</search>
